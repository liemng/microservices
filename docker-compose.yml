version: '2.1'
services:
  ssg:
    image: caapim/gateway:9.3.00
    mem_limit: 2048m
    expose:
    - "8777"
    ports:
    - 8080:8080
    - 8443:8443
    - 9443:9443
    - 8777:8777/udp
    volumes:
    - /opt/SecureSpan/Gateway/node/default/etc/bootstrap/services/restman
    - ./apigw/LICENSE.xml:/opt/SecureSpan/Gateway/node/default/etc/bootstrap/license/license.xml
    environment:
      ACCEPT_LICENSE: 'true'
      SSG_ADMIN_USERNAME: admin
      SSG_ADMIN_PASSWORD: password
      SSG_DATABASE_JDBC_URL: jdbc:mysql://database:3306/microservicedb
      SSG_DATABASE_USER: root
      SSG_DATABASE_PASSWORD: 7layer
      SSG_CLUSTER_HOST: localhost
      SSG_CLUSTER_PASSWORD: 7layer
      EXTRA_JAVA_ARGS: -Dcom.l7tech.service.metrics.enabled=false
  database:
    image: percona/percona-server:5.7
    mem_limit: 512m
    ports:
    - 3306:3306
    volumes:
    - ./apigw/db:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 7layer
      MYSQL_DATABASE: microservicedb
    healthcheck:
      test: /usr/bin/mysql --user=root --password=7layer --execute "SHOW DATABASES;"
      interval: 10s
      timeout: 10s
  configserver:
    image: liemmn/dxc-config-server:microservices
    ports:
    - 8888:8888
    environment:
      ENCRYPT_KEY: IMSYMMETRIC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
  oauth2server:
    image: liemmn/dxc-oauth2-server:microservices
    ports:
    - 9999:9999
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9999/health"]
  subscriptionservice:
    image: liemmn/dxc-subscription-service:microservices
    ports:
    - 8889:8889
    environment:
      PROFILE: docker
      CONFIGSERVER_URI: http://configserver:8888
      ENCRYPT_KEY: IMSYMMETRIC
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8889/health"]
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_healthy